{"version":3,"sources":["Try.js","App.js","index.js"],"names":["Try","tryInfo","try","result","getNumbers","candidate","array","i","chosen","floor","Math","random","push","App","useState","setResult","value","setValue","answer","setAnswer","tries","setTries","href","onSubmit","e","preventDefault","join","prevTries","alert","answerArray","split","map","v","parseInt","strike","ball","length","includes","maxLength","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAWeA,EATH,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACX,OACI,+BACI,8BAAMA,EAAQC,MACd,8BAAMD,EAAQE,aCHpBC,EAAa,WAGf,IAFA,IAAMC,EAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/BC,EAAQ,GACLC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAE,CAC1B,IAAMC,EAASH,EAAUI,MAAMC,KAAKD,MAAMC,KAAKC,UAAY,EAAIJ,IAAK,GAAG,GACvED,EAAMM,KAAKJ,GAEf,OAAOF,GAmEIO,EAhEH,WACR,MAA4BC,mBAAS,IAArC,mBAAOX,EAAP,KAAeY,EAAf,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA4BH,mBAASV,KAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAA0BL,mBAAS,IAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAyCA,OACI,qCACI,6BAAI,mBAAGC,KAAK,2DAAR,+CACJ,6BAAKnB,IACL,sBAAMoB,SA3CO,SAACC,GAElB,GADAA,EAAEC,iBACET,IAAUE,EAAOQ,KAAK,IACtBX,EAAU,iBACVM,GAAS,SAACM,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAEzB,IAAKc,EAAOb,OAAQ,sBAEhDyB,MAAM,mEACNX,EAAS,IACTE,EAAUf,KACViB,EAAS,QACN,CACH,IAAMQ,EAAcb,EAAMc,MAAM,IAAIC,KAAI,SAACC,GAAD,OAAOC,SAASD,MACpDE,EAAS,EACTC,EAAO,EACX,GAAIf,EAAMgB,QAAU,EAChBrB,EAAU,uEAAD,OAAsBG,EAAOQ,KAAK,KAAlC,8BACbE,MAAM,mEACNX,EAAS,IACTE,EAAUf,KACViB,EAAS,QACF,CACH,IAAK,IAAId,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACpBsB,EAAYtB,KAAOW,EAAOX,GAC1B2B,GAAU,EACJhB,EAAOmB,SAASR,EAAYtB,MACpC4B,GAAQ,GAGdd,GAAS,SAACM,GAAD,4BAAmBA,GAAnB,CAA8B,CAAEzB,IAAKc,EAAOb,OAAO,GAAD,OAAK+B,EAAL,4CAAsBC,EAAtB,mCAC3DlB,EAAS,OAab,SACI,uBAAOqB,UAAW,EAAGtB,MAAOA,EAAOuB,SATzB,SAACf,GACnBP,EAASO,EAAEgB,OAAOxB,YAUd,iDAAUI,EAAMgB,UAChB,6BACKhB,EAAMW,KAAI,SAACC,EAAGzB,GACX,OACI,cAAC,EAAD,CAA4BN,QAAS+B,GAArC,UAAazB,EAAI,EAAjB,mCCjExBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec9fc0ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Try = ({ tryInfo }) => {\r\n    return (\r\n        <li>\r\n            <div>{tryInfo.try}</div>\r\n            <div>{tryInfo.result}</div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Try;","import React, { useState } from 'react';\nimport Try from './Try';\n\nconst getNumbers = () => {\n    const candidate = [0,1,2,3,4,5,6,7,8,9];\n    const array = [];\n    for (let i = 0; i < 4; i += 1){\n        const chosen = candidate.floor(Math.floor(Math.random() * (9 - i)), 1)[0];\n        array.push(chosen);\n    }\n    return array;\n};\n\nconst App = () => {\n    const [result, setResult] = useState('');\n    const [value, setValue] = useState('');\n    const [answer, setAnswer] = useState(getNumbers());\n    const [tries, setTries] = useState([]);\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        if (value === answer.join('')){\n            setResult('홈런!');\n            setTries((prevTries) => {\n                return [...prevTries, { try: value, result: '홈런!' }]\n            });            \n            alert('게임을 다시 시작합니다!');\n            setValue('');\n            setAnswer(getNumbers());\n            setTries([]);            \n        } else {\n            const answerArray = value.split('').map((v) => parseInt(v));\n            let strike = 0;\n            let ball = 0;\n            if (tries.length >= 9) {\n                setResult(`10번 넘게 틀려서 실패! 답은 ${answer.join(' ')}였습니다!`);                \n            alert('게임을 다시 시작합니다!');\n            setValue('');\n            setAnswer(getNumbers());\n            setTries([]);            \n            } else {\n                for (let i = 0; i < 4; i += 1) {\n                    if (answerArray[i] === answer[i]) {\n                        strike += 1;\n                    } else if(answer.includes(answerArray[i])) {\n                      ball += 1;\n                    }\n                }\n                setTries((prevTries) => [...prevTries, { try: value, result: `${strike} 스트라이크, ${ball} 볼입니다`}]);\n                setValue('');\n            }\n        }\n    };\n\n    const onChangeInput = (e) => {\n        setValue(e.target.value);\n    };\n\n    return (\n        <>\n            <h1><a href=\"https://namu.wiki/w/%EC%88%AB%EC%9E%90%EC%95%BC%EA%B5%AC\">숫자야구란?</a></h1>\n            <h1>{result}</h1>\n            <form onSubmit={onSubmitForm}>\n                <input maxLength={4} value={value} onChange={onChangeInput} />\n            </form>\n            <div>시도: {tries.length}</div>\n            <ul>\n                {tries.map((v, i) => {\n                    return (\n                        <Try key={`${i + 1}차 시도 :`} tryInfo={v} />\n                    );\n               })}\n            </ul>\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}